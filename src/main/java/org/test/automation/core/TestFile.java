package org.test.automation.core;

import java.util.Collections;
import java.util.List;

import org.test.automation.interpriters.AfterTestCaseAnnotationInterpriter;
import org.test.automation.interpriters.BeforeTestCaseAnnotationInterpriter;

/**
* <p>
* This class is to represent each .atc file.
* </p>
* 
* <p>
* It is used for both the running of the tests and the generating of the report
* after. This class is generated by
* {@link org.test.automation.core.AutomatedTestCaseRunner} when it reads the
* test cases.
*/
public final class TestFile {

	private final List<String> tags;
	private final String scenario;
	
	private final List<TestCase> testCases;

	TestFile(List<String> tags, String scenario, List<TestCase> testCases)
	{
		this.tags = tags;
		this.scenario = scenario;
		this.testCases =  testCases;
	}

	/**This is the list of tags from the .atc file set using the TAG: line
	 * @return the list of tags assigned to the test file
	 */
	public List<String> getTags()
	{
		return tags;
	}

	/**This name of the test file which should describe what its testing set using the SCENARIO: line
	 * @return the name of the test scenario
	 */
	public String getScenario()
	{
		return scenario;
	}
	
	
	/**The list of test cases that are within the file marked by the TESTCASE: lines
	 * @return the testCases
	 */
	public List<TestCase> getTestCases()
	{
		return Collections.unmodifiableList(testCases);
	}

	/**
	 * This executes the whole test file 
	 */
	public void runTests()
	{
		for (TestCase testCase : testCases)
		{
			BeforeTestCaseAnnotationInterpriter.runAllMethods();
			testCase.runTestCase();
			AfterTestCaseAnnotationInterpriter.runAllMethods();
		}
	}
	
	public int hashCode()
	{
		return scenario.hashCode();
	}
	
	public boolean equals(Object obj)
	{
		boolean equal = false;
		if(obj instanceof TestFile)
		{
			TestFile otherFile = (TestFile) obj;
			equal = otherFile.scenario.equals(this.scenario);
		}
		return equal;
	}

}
